package HeroSelection

import HashMap
import Players
import ClosureEvents
import ClosureTimers

import Initialization

public constant heroSelected = new HashMap<player, unit>
public constant heroPicked = new HashMap<player, bool>

@lastinit function initHeroArrays()
    for player p in ALL_PLAYERS
        heroSelected.put(p, null)
        heroPicked.put(p, false)

    // Hero selection event
    EventListener.add(EVENT_PLAYER_UNIT_SELECTED) ->
        let u = GetTriggerUnit()
        print(u.getName())
        if u.getOwner().getId() == PLAYER_NEUTRAL_PASSIVE
            if gg_rct_heroSelect.contains(u.getPos())
                let p = GetTriggerPlayer()
                
                // If nothing was selected
                if heroSelected.get(p) != u
                    // Save the selection
                    heroSelected.put(p, u)
                    // Reset selection after 0.4s
                    doAfter(0.4) ->
                        p.unselect(u)
                        heroSelected.put(p, null)
                // Create the hero
                else
                    let pos = (p.getTeam() == 0) ? gg_rct_T1Goal.getCenter() : 
                                                   gg_rct_T2Goal.getCenter()
                    createUnit(p, u.getTypeId(), pos, angle(0))
                    p.panCameraToTimed(pos, 0.4)