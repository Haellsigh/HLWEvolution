package IncomeBoard

import ClosureEvents
import Initialization
import Players
import Teams
import IncomeValues
import Lives

constant multiboard incomeBoard = CreateMultiboard()

@lastinit function initIncomeBoard()
    incomeBoard
    ..setColumnCount(4)
    ..setTitle("Incomes & lives")

    updateBoardSize()

    // Columns
    incomeBoard.getItem(0, 0).setValue("Name")
    incomeBoard.getItem(0, 1).setValue("Gold")
    incomeBoard.getItem(0, 2).setValue("Lumber")
    incomeBoard.getItem(0, 3).setValue("Lives")

    // Team 1 name & lives
    incomeBoard.getItem(1, 0)
    ..setValue("Hero Line 1")..setValueColor(teams[0].color)
    incomeBoard.getItem(1, 3)
    ..setValue("100")

    // Set style
    for i = 0 to incomeBoard.getRowCount()
        incomeBoard.getItem(i, 0)..setStyle(true, false)..setWidth(0.10)
        incomeBoard.getItem(i, 1)..setStyle(true, false)..setWidth(0.06)
        incomeBoard.getItem(i, 2)..setStyle(true, false)..setWidth(0.06)
        incomeBoard.getItem(i, 3)..setStyle(true, false)..setWidth(0.03)

        // Set icons
        incomeBoard.getItem(0, 1)..setStyle(false, true)..setIcon("ReplaceableTextures\\CommandButtons\\BTNGoldMine.blp")
        incomeBoard.getItem(0, 2)..setStyle(false, true)..setIcon("ReplaceableTextures\\CommandButtons\\BTNBundleOfLumber.blp")

    incomeBoard..display(false)..display(true)

    // Update board when someone leaves
    EventListener.add(EVENT_PLAYER_LEAVE) ->
        updateBoardSize()

function updateBoardSize()
    incomeBoard
    ..setRowCount(totalPlayers + 3)

    // Team 2's name
    incomeBoard.getItem(2 + teams[0].count, 0)
    ..setValue("Hero Line 2")..setValueColor(teams[1].color)
    incomeBoard.getItem(2 + teams[0].count, 3)
    ..setValue(lives[1].toString())

    // Player names & incomes
    for p in ALL_PLAYERS
        let inc = playerIncome.get(p)
        //var row = 2 + i + p.getTeam()
        let row = 2 + p.getId() + p.getTeam()

        // Name
        incomeBoard.getItem(row, 0)..setValue(p.getNameColored())
        // Income gold
        incomeBoard.getItem(row, 1)..setValue(inc.gold.toString())
        // Income lumber
        incomeBoard.getItem(row, 2)..setValue(inc.lumber.toString())

    // Refresh board
    incomeBoard..display(false)..display(true)

// Update incomeBoard's income values
public function updateIncome(player p)
    let inc = playerIncome.get(p)
    var row = 2 + p.getId() + p.getTeam()

    // Income gold
    incomeBoard.getItem(row, 1)..setValue(inc.gold.toString())
    // Income lumber
    incomeBoard.getItem(row, 2)..setValue(inc.lumber.toString())


// Update incomeBoard's lives count
public function updateLives()
    // T1 lives
    incomeBoard.getItem(1, 3)
    .setValue(lives[0].toString())
    // T2 lives
    incomeBoard.getItem(2 + teams[0].count, 3)
    .setValue(lives[1].toString())