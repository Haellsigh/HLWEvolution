package Commands

import StringUtils
import ClosureEvents
import LinkedList

import Initialization
import IncomeValues
import IncomeBoard
import HeroSelection
import Money

let MSG_DURATION = 10.

public bool DBG_MODE = false

public string commandHelp = compiletime(
    "help: Shows the list of commands ingame\n\n" +
    "zoom x or cam x: Sets the camera zoom (between 50 and 220)\n\n"
    )

@loadinit function initChatEvent() 
    EventListener.add(EVENT_PLAYER_CHAT_FILTER) ->
        var str = GetEventPlayerChatString()
        if str.startsWith("-")
            parseCommand(str)

function parseCommand(string str)
    let p = GetTriggerPlayer()

    LinkedList<string> args = str.substring(1).split(" ")

    let cmd = args.get(0)

    switch cmd
        case "help"
            p.print("List of commands:\n\n" + commandHelp, MSG_DURATION)
        case "dbg"
            DBG_MODE =true
            print("Debug mode enabled!")
        case "income"
            let which = args.get(1)
            let value = args.get(2).toInt()
            if which != null
                switch which
                    case "g"
                        playerIncome.get(p).gold += value
                    case "l"
                        playerIncome.get(p).lumber += value
                updateIncome(p)
        case "zoom" | "cam"
            let zoomstr = args.get(1)
            if zoomstr != null
                var zoom = zoomstr.toInt()
                
                // Minimum zoom
                if zoom < 50
                    zoom = 50
                    p.print("Minimum zoom is 50", MSG_DURATION)
                // Maximum zoom
                else if zoom > 220
                    zoom = 220
                    p.print("Maximum zoom is 220", MSG_DURATION)

                SetCameraFieldForPlayer(p, CAMERA_FIELD_TARGET_DISTANCE, 16.5 * zoom, 0.3)

        case "lvl"
            let lvlstr = args.get(1)
            if lvlstr != null
                let hero = heroSelected.get(p)
                let curLevel = hero.getLevel()
                var givenAttrib = 0
                var askedAttrib = 0
                var givenAttribGold = 0
                var givenAttribLumber = 0
                let attribCost = 20000

                let possibleAttribGold = (p.getGold() / attribCost).toInt()
                let possibleAttribLumber = (p.getLumber() * goldToLumber / attribCost).toInt()
                let possibleAttrib = possibleAttribGold + possibleAttribLumber

                if possibleAttrib == 0
                    p.print("Not enough gold!", 5)
                else
                    if lvlstr == "max"
                        givenAttrib = possibleAttrib
                    else
                        askedAttrib = lvlstr.toInt()
                        if askedAttrib > possibleAttrib
                            p.print("Not enough gold!", 5)
                        else
                            givenAttrib = askedAttrib
                    
                    // Max level is 120
                    givenAttrib = max(givenAttrib, 120 - curLevel)
                    givenAttribGold = min(possibleAttribGold, givenAttrib)
                    givenAttribLumber = givenAttrib - givenAttribGold

                    // Add attribute
                    hero.addLevels(givenAttrib, true)

                    // Remove money
                    p.addGold(- givenAttribGold * attribCost)
                    p.addLumber(- (givenAttribLumber * attribCost / goldToLumber).toInt())
                    
        case "str" | "agi" | "int"
            let attribstr = args.get(1)
            if attribstr != null
                let hero = heroSelected.get(p)
                var givenAttrib = 0
                var askedAttrib = 0
                var givenAttribGold = 0
                var givenAttribLumber = 0
                let attribCost = 100

                let possibleAttribGold = (p.getGold() / attribCost).toInt()
                let possibleAttribLumber = (p.getLumber() * goldToLumber / attribCost).toInt()
                let possibleAttrib = possibleAttribGold + possibleAttribLumber

                if possibleAttrib == 0
                    p.print("Not enough gold!", 5)
                else
                    if attribstr == "max"
                        givenAttrib = possibleAttrib
                    else
                        askedAttrib = attribstr.toInt()
                        if askedAttrib > possibleAttrib
                            p.print("Not enough gold!", 5)
                        else
                            givenAttrib = askedAttrib
                    
                    givenAttribGold = min(possibleAttribGold, givenAttrib)
                    givenAttribLumber = givenAttrib - givenAttribGold

                    // Add attribute
                    switch cmd
                        case "str"
                            hero.addStr(givenAttrib)
                        case "agi"
                            hero.addAgi(givenAttrib)
                        case "int"
                            hero.addInt(givenAttrib)

                    // Remove money
                    p.addGold(- givenAttribGold * attribCost)
                    p.addLumber(- (givenAttribLumber * attribCost / goldToLumber).toInt())
            
        default
            p.print("Unknown command", MSG_DURATION)